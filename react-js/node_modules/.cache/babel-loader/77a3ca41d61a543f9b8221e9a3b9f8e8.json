{"ast":null,"code":"var _jsxFileName = \"/Users/sudha.yadav/Desktop/Personal-Finance-Manager/react-js/src/context/auth/AuthState.js\";\nimport React, { useReducer, useContext } from 'react';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport LoadingContext from '../loading/loadingContext';\nimport MessageContext from '../message/messageContext';\nimport axios from 'axios';\nimport { REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SET_AUTH, SEND_EMAIL_RESET_PASSWORD_FAIL, PASSWORD_RESET_FAIL } from '../types';\nimport { MSG_REGISTER_SUCCESS, MSG_PASSWORD_RESET_EMAIL, MSG_PASSWORD_RESET_SUCCESSFUL } from '../../utils/messages';\nimport { baseURL } from '../baseUrl';\nconst AuthState = props => {\n  const loadingContext = useContext(LoadingContext);\n  const {\n    showLoading,\n    hideLoading\n  } = loadingContext;\n  const messageContext = useContext(MessageContext);\n  const {\n    showSuccessMsg,\n    showErrorMsg\n  } = messageContext;\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Register User\n  const register = async formData => {\n    showLoading();\n    let isSuccess = false;\n    try {\n      await axios.post(baseURL + '/api/register', formData);\n      showSuccessMsg(MSG_REGISTER_SUCCESS);\n      isSuccess = true;\n    } catch (err) {\n      showErrorMsg(REGISTER_FAIL, err);\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n    hideLoading();\n    return isSuccess;\n  };\n\n  // Login User\n  const login = async (formData, rememberMe) => {\n    showLoading();\n    try {\n      const res = await axios.post(baseURL + '/api/login', formData);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n        rememberMe\n      });\n    } catch (err) {\n      showErrorMsg(LOGIN_FAIL, err);\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    }\n    hideLoading();\n  };\n\n  // Send password reest link\n  const sendPasswordResetEmail = async formData => {\n    showLoading();\n    let isSuccess = false;\n    try {\n      await axios.post(baseURL + '/api/request-password-reset', formData);\n      showSuccessMsg(MSG_PASSWORD_RESET_EMAIL);\n      isSuccess = true;\n    } catch (err) {\n      showErrorMsg(SEND_EMAIL_RESET_PASSWORD_FAIL, err);\n      dispatch({\n        type: SEND_EMAIL_RESET_PASSWORD_FAIL\n      });\n    }\n    hideLoading();\n    return isSuccess;\n  };\n\n  // Reset password\n  const resetPassword = async formData => {\n    showLoading();\n    let isSuccess = false;\n    try {\n      await axios.post(baseURL + '/api/password-reset', formData);\n      showSuccessMsg(MSG_PASSWORD_RESET_SUCCESSFUL);\n      isSuccess = true;\n    } catch (err) {\n      showErrorMsg(PASSWORD_RESET_FAIL, err);\n      dispatch({\n        type: PASSWORD_RESET_FAIL\n      });\n    }\n    hideLoading();\n    return isSuccess;\n  };\n  const setAuthentication = () => {\n    if (!localStorage.getItem('token')) return;\n    setAuthToken(localStorage.token);\n    dispatch({\n      type: SET_AUTH\n    });\n  };\n\n  // Logout\n  const logout = () => dispatch({\n    type: LOGOUT\n  });\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      register,\n      login,\n      setAuthentication,\n      logout,\n      sendPasswordResetEmail,\n      resetPassword\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport default AuthState;","map":{"version":3,"names":["React","useReducer","useContext","AuthContext","authReducer","setAuthToken","LoadingContext","MessageContext","axios","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_AUTH","SEND_EMAIL_RESET_PASSWORD_FAIL","PASSWORD_RESET_FAIL","MSG_REGISTER_SUCCESS","MSG_PASSWORD_RESET_EMAIL","MSG_PASSWORD_RESET_SUCCESSFUL","baseURL","AuthState","props","loadingContext","showLoading","hideLoading","messageContext","showSuccessMsg","showErrorMsg","initialState","token","localStorage","getItem","isAuthenticated","state","dispatch","register","formData","isSuccess","post","err","type","login","rememberMe","res","payload","data","sendPasswordResetEmail","resetPassword","setAuthentication","logout","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","children"],"sources":["/Users/sudha.yadav/Desktop/Personal-Finance-Manager/react-js/src/context/auth/AuthState.js"],"sourcesContent":["import React, { useReducer, useContext } from 'react';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport LoadingContext from '../loading/loadingContext';\nimport MessageContext from '../message/messageContext';\nimport axios from 'axios';\nimport {\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_AUTH,\n  SEND_EMAIL_RESET_PASSWORD_FAIL,\n  PASSWORD_RESET_FAIL,\n} from '../types';\nimport { MSG_REGISTER_SUCCESS, MSG_PASSWORD_RESET_EMAIL, MSG_PASSWORD_RESET_SUCCESSFUL } from '../../utils/messages';\nimport { baseURL } from '../baseUrl';\n\nconst AuthState = props => {\n  const loadingContext = useContext(LoadingContext);\n  const { showLoading, hideLoading } = loadingContext;\n\n  const messageContext = useContext(MessageContext);\n  const { showSuccessMsg, showErrorMsg } = messageContext;\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Register User\n  const register = async formData => {\n    showLoading();\n    let isSuccess = false;\n    try {\n      await axios.post(baseURL + '/api/register', formData);\n\n      showSuccessMsg(MSG_REGISTER_SUCCESS);\n      isSuccess = true;\n\n    } catch (err) {\n      showErrorMsg(REGISTER_FAIL, err);\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n\n    hideLoading();\n    return isSuccess;\n  };\n\n  // Login User\n  const login = async (formData, rememberMe) => {\n    showLoading()\n\n    try {\n      const res = await axios.post(baseURL + '/api/login', formData);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n        rememberMe\n      });\n\n    } catch (err) {\n\n      showErrorMsg(LOGIN_FAIL, err);\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    }\n\n    hideLoading();\n  };\n\n  // Send password reest link\n  const sendPasswordResetEmail = async (formData) => {\n    showLoading()\n    let isSuccess = false;\n\n    try {\n      await axios.post(baseURL + '/api/request-password-reset', formData);\n\n      showSuccessMsg(MSG_PASSWORD_RESET_EMAIL)\n      isSuccess = true;\n    } catch (err) {\n\n      showErrorMsg(SEND_EMAIL_RESET_PASSWORD_FAIL, err);\n      dispatch({\n        type: SEND_EMAIL_RESET_PASSWORD_FAIL\n      });\n    }\n\n    hideLoading();\n    return isSuccess;\n  }\n\n  // Reset password\n  const resetPassword = async (formData) => {\n    showLoading()\n    let isSuccess = false;\n\n    try {\n      await axios.post(baseURL + '/api/password-reset', formData);\n\n      showSuccessMsg(MSG_PASSWORD_RESET_SUCCESSFUL)\n      isSuccess = true;\n    } catch (err) {\n\n      showErrorMsg(PASSWORD_RESET_FAIL, err);\n      dispatch({\n        type: PASSWORD_RESET_FAIL\n      });\n    }\n\n    hideLoading();\n    return isSuccess;\n  }\n\n  const setAuthentication = () => {\n    if (!localStorage.getItem('token'))\n      return;\n\n    setAuthToken(localStorage.token);\n    dispatch({\n      type: SET_AUTH\n    })\n\n  }\n\n  // Logout\n  const logout = () => dispatch({ type: LOGOUT });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        register,\n        login,\n        setAuthentication,\n        logout,\n        sendPasswordResetEmail,\n        resetPassword\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}